package com.thepyprogrammer.phykt.unit

val am = Unit("m", "attometre", "length", 1e-18)
val `as` = Unit("s", "attosecond", "time", 1e-18, isScalar=true)
val ag = Unit("g", "attogram", "mass", 1e-18/1000, isScalar=true)
val aA = Unit("A", "attoampere", "electric current", 1e-18, isScalar=true)
val aK = Unit("K", "attokelvin", "thermodynamic temperature", 1e-18, isScalar=true)
val amol = Unit("mol", "attomole", "amount of substance", 1e-18, isScalar=true)
val acd = Unit("cd", "attocandela", "luminous intensity", 1e-18, isScalar=true)
val aHz = Unit("1.0/s", "attohertz", "frequency", 1e-18, isScalar=true)
val aN = Unit("gm/s^2", "attonewton", "force", 1e-18)
val aPa = Unit("g/ms^2", "attopascal", "pressure, stress", 1e-18, isScalar=true)
val aJ = Unit("gm^2/s^2", "attojoule", "energy, work, amount of heat", 1e-18, isScalar=true)
val aW = Unit("gm^2/s^3", "attowatt", "power, radiant flux", 1e-18, isScalar=true)
val aC = Unit("As", "attocoulomb", "electric charge, quantity of electricity", 1e-18, isScalar=true)
val aV = Unit("gm^2/As^3", "attovolt", "electric potential, emf", 1e-18, isScalar=true)
val aΩ = Unit("gm^2/s^3A^2", "attoohm", "electric resistance, impedance", 1e-18, isScalar=true)
val aohm = Unit("gm^2/s^3A^2", "attoohm", "electric resistance, impedance", 1e-18, isScalar=true)
val akat = Unit("mol/s", "attokatal", "catalytic activity", 1e-18, isScalar=true)
val aS = Unit("A^2s^3/gm^2", "attosiemen", "electric conductance", 1e-18, isScalar=true)
val aF = Unit("A^2s^4/gm^2", "attofarad", "capacitance", 1e-18, isScalar=true)
val aWb = Unit("gm^2/As^2", "attoweber", "magnetic flux", 1e-18, isScalar=true)
val aT = Unit("g/As^2", "attotesla", "magnetic field", 1e-18)
val aH = Unit("gm^2/A^2s^2", "attohenry", "inductance", 1e-18, isScalar=true)
val adegreeCelsius = Unit("K", "atto°Celsius", "temperature on the celsius scale", 1e-18, -273.15, isScalar=true)
val adegCelsius = Unit("K", "atto°Celsius", "temperature on the celsius scale", 1e-18, -273.15, isScalar=true)
val adegC = Unit("K", "atto°Celsius", "temperature on the celsius scale", 1e-18, -273.15, isScalar=true)
val aGy = Unit("m^2/s^2", "attogray", "absorbed dose, specific energy", 1e-18, isScalar=true)
val aSv = Unit("m^2/s^2", "attosievert", "dose equivalent(d)", 1e-18, isScalar=true)
val aBq = Unit("1.0/s", "attobecquerel", "activity (of a radionuclide)", 1e-18, isScalar=true)
val alm = Unit("cd", "attolumen", "luminous flux", 1e-18, isScalar=true)
val alx = Unit("cd/m^2", "attolux", "illuminance", 1e-18, isScalar=true)
val aeV = Unit("gm^2/s^2", "attoelectron Volts", "measure of energy", 1e-18*1.60217648740e-19, isScalar=true)
val aly = Unit("m", "attolightyear", "measure of distance", 1e-18*3600*24*365.25*299792458)
val apc = Unit("m", "attoparsec", "measure of distance", 1e-18*3.086e16, isScalar=true)
val aL = Unit("m^3", "attolitre", "measure of volume", 1e-18/1000, isScalar=true)