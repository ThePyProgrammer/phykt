package com.thepyprogrammer.phykt.unit

val Tm = Unit("m", "Terametre", "length", 1000000000000.0)
val Ts = Unit("s", "Terasecond", "time", 1000000000000.0, isScalar=true)
val Tg = Unit("g", "Teragram", "mass", 1000000000000.0/1000, isScalar=true)
val TA = Unit("A", "Teraampere", "electric current", 1000000000000.0, isScalar=true)
val TK = Unit("K", "Terakelvin", "thermodynamic temperature", 1000000000000.0, isScalar=true)
val Tmol = Unit("mol", "Teramole", "amount of substance", 1000000000000.0, isScalar=true)
val Tcd = Unit("cd", "Teracandela", "luminous intensity", 1000000000000.0, isScalar=true)
val THz = Unit("1.0/s", "Terahertz", "frequency", 1000000000000.0, isScalar=true)
val TN = Unit("gm/s^2", "Teranewton", "force", 1000000000000.0)
val TPa = Unit("g/ms^2", "Terapascal", "pressure, stress", 1000000000000.0, isScalar=true)
val TJ = Unit("gm^2/s^2", "Terajoule", "energy, work, amount of heat", 1000000000000.0, isScalar=true)
val TW = Unit("gm^2/s^3", "Terawatt", "power, radiant flux", 1000000000000.0, isScalar=true)
val TC = Unit("As", "Teracoulomb", "electric charge, quantity of electricity", 1000000000000.0, isScalar=true)
val TV = Unit("gm^2/As^3", "Teravolt", "electric potential, emf", 1000000000000.0, isScalar=true)
val TΩ = Unit("gm^2/s^3A^2", "Teraohm", "electric resistance, impedance", 1000000000000.0, isScalar=true)
val Tohm = Unit("gm^2/s^3A^2", "Teraohm", "electric resistance, impedance", 1000000000000.0, isScalar=true)
val Tkat = Unit("mol/s", "Terakatal", "catalytic activity", 1000000000000.0, isScalar=true)
val TS = Unit("A^2s^3/gm^2", "Terasiemen", "electric conductance", 1000000000000.0, isScalar=true)
val TF = Unit("A^2s^4/gm^2", "Terafarad", "capacitance", 1000000000000.0, isScalar=true)
val TWb = Unit("gm^2/As^2", "Teraweber", "magnetic flux", 1000000000000.0, isScalar=true)
val TT = Unit("g/As^2", "Teratesla", "magnetic field", 1000000000000.0)
val TH = Unit("gm^2/A^2s^2", "Terahenry", "inductance", 1000000000000.0, isScalar=true)
val TdegreeCelsius = Unit("K", "Tera°Celsius", "temperature on the celsius scale", 1000000000000.0, -273.15, isScalar=true)
val TdegCelsius = Unit("K", "Tera°Celsius", "temperature on the celsius scale", 1000000000000.0, -273.15, isScalar=true)
val TdegC = Unit("K", "Tera°Celsius", "temperature on the celsius scale", 1000000000000.0, -273.15, isScalar=true)
val TGy = Unit("m^2/s^2", "Teragray", "absorbed dose, specific energy", 1000000000000.0, isScalar=true)
val TSv = Unit("m^2/s^2", "Terasievert", "dose equivalent(d)", 1000000000000.0, isScalar=true)
val TBq = Unit("1.0/s", "Terabecquerel", "activity (of a radionuclide)", 1000000000000.0, isScalar=true)
val Tlm = Unit("cd", "Teralumen", "luminous flux", 1000000000000.0, isScalar=true)
val Tlx = Unit("cd/m^2", "Teralux", "illuminance", 1000000000000.0, isScalar=true)
val TeV = Unit("gm^2/s^2", "Teraelectron Volts", "measure of energy", 1000000000000.0*1.60217648740e-19, isScalar=true)
val Tly = Unit("m", "Teralightyear", "measure of distance", 1000000000000.0*3600*24*365.25*299792458)
val Tpc = Unit("m", "Teraparsec", "measure of distance", 1000000000000.0*3.086e16, isScalar=true)
val TL = Unit("m^3", "Teralitre", "measure of volume", 1000000000000.0/1000, isScalar=true)
