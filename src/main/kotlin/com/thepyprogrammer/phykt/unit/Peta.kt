package com.thepyprogrammer.phykt.unit

val Pm = Unit("m", "Petametre", "length", 1000000000000000.0)
val Ps = Unit("s", "Petasecond", "time", 1000000000000000.0, isScalar=true)
val Pg = Unit("g", "Petagram", "mass", 1000000000000000.0/1000, isScalar=true)
val PA = Unit("A", "Petaampere", "electric current", 1000000000000000.0, isScalar=true)
val PK = Unit("K", "Petakelvin", "thermodynamic temperature", 1000000000000000.0, isScalar=true)
val Pmol = Unit("mol", "Petamole", "amount of substance", 1000000000000000.0, isScalar=true)
val Pcd = Unit("cd", "Petacandela", "luminous intensity", 1000000000000000.0, isScalar=true)
val PHz = Unit("1.0/s", "Petahertz", "frequency", 1000000000000000.0, isScalar=true)
val PN = Unit("gm/s^2", "Petanewton", "force", 1000000000000000.0)
val PPa = Unit("g/ms^2", "Petapascal", "pressure, stress", 1000000000000000.0, isScalar=true)
val PJ = Unit("gm^2/s^2", "Petajoule", "energy, work, amount of heat", 1000000000000000.0, isScalar=true)
val PW = Unit("gm^2/s^3", "Petawatt", "power, radiant flux", 1000000000000000.0, isScalar=true)
val PC = Unit("As", "Petacoulomb", "electric charge, quantity of electricity", 1000000000000000.0, isScalar=true)
val PV = Unit("gm^2/As^3", "Petavolt", "electric potential, emf", 1000000000000000.0, isScalar=true)
val PΩ = Unit("gm^2/s^3A^2", "Petaohm", "electric resistance, impedance", 1000000000000000.0, isScalar=true)
val Pohm = Unit("gm^2/s^3A^2", "Petaohm", "electric resistance, impedance", 1000000000000000.0, isScalar=true)
val Pkat = Unit("mol/s", "Petakatal", "catalytic activity", 1000000000000000.0, isScalar=true)
val PS = Unit("A^2s^3/gm^2", "Petasiemen", "electric conductance", 1000000000000000.0, isScalar=true)
val PF = Unit("A^2s^4/gm^2", "Petafarad", "capacitance", 1000000000000000.0, isScalar=true)
val PWb = Unit("gm^2/As^2", "Petaweber", "magnetic flux", 1000000000000000.0, isScalar=true)
val PT = Unit("g/As^2", "Petatesla", "magnetic field", 1000000000000000.0)
val PH = Unit("gm^2/A^2s^2", "Petahenry", "inductance", 1000000000000000.0, isScalar=true)
val PdegreeCelsius = Unit("K", "Peta°Celsius", "temperature on the celsius scale", 1000000000000000.0, -273.15, isScalar=true)
val PdegCelsius = Unit("K", "Peta°Celsius", "temperature on the celsius scale", 1000000000000000.0, -273.15, isScalar=true)
val PdegC = Unit("K", "Peta°Celsius", "temperature on the celsius scale", 1000000000000000.0, -273.15, isScalar=true)
val PGy = Unit("m^2/s^2", "Petagray", "absorbed dose, specific energy", 1000000000000000.0, isScalar=true)
val PSv = Unit("m^2/s^2", "Petasievert", "dose equivalent(d)", 1000000000000000.0, isScalar=true)
val PBq = Unit("1.0/s", "Petabecquerel", "activity (of a radionuclide)", 1000000000000000.0, isScalar=true)
val Plm = Unit("cd", "Petalumen", "luminous flux", 1000000000000000.0, isScalar=true)
val Plx = Unit("cd/m^2", "Petalux", "illuminance", 1000000000000000.0, isScalar=true)
val PeV = Unit("gm^2/s^2", "Petaelectron Volts", "measure of energy", 1000000000000000.0*1.60217648740e-19, isScalar=true)
val Ply = Unit("m", "Petalightyear", "measure of distance", 1000000000000000.0*3600*24*365.25*299792458)
val Ppc = Unit("m", "Petaparsec", "measure of distance", 1000000000000000.0*3.086e16, isScalar=true)
val PL = Unit("m^3", "Petalitre", "measure of volume", 1000000000000000.0/1000, isScalar=true)